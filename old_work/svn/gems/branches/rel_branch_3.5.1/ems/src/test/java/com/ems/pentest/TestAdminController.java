package com.ems.pentest;

import javax.ws.rs.core.Response;

import junit.framework.Assert;

import org.apache.commons.lang.StringUtils;
import org.junit.Test;

import com.ems.model.SystemConfiguration;

public class TestAdminController extends AbstractBaseTest{
	
	@Test
	public void testisParamValueAllowed(){
		try {
			SystemConfiguration validationFlagConfig = systemConfigurationManager.loadConfigByName("flag.ems.apply.validation");
			boolean isApplyValidation = true;
			if (validationFlagConfig != null) {
				final String isApplyValidationStr = validationFlagConfig.getValue();
				isApplyValidation = StringUtils.isEmpty(isApplyValidationStr)?true:isApplyValidationStr.trim().equalsIgnoreCase("true")?true:false;
			}
			//checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "p1", "v1",Response.Status.OK.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.refreshTree", "v5",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.NOT_ACCEPTABLE.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.upload", "v5",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.NOT_ACCEPTABLE.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.upload", "true",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.OK.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.upload", "False",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.OK.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.refreshTree", "TRUE",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.OK.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.refreshTree", "faLse",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.OK.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.refreshTree", "123",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.NOT_ACCEPTABLE.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.upload", "123",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.NOT_ACCEPTABLE.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.upload", "",!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.NOT_ACCEPTABLE.getStatusCode());
			checkAssertFalseWithArgException(messageSource, systemConfigurationManager, "admin.org.settings.upload", null,!isApplyValidation?Response.Status.OK.getStatusCode():Response.Status.OK.getStatusCode());
			
		} catch (Exception e) {
			logger.error("***FAILED***", e);
			Assert.fail(e.getMessage());
		}

	}

}
